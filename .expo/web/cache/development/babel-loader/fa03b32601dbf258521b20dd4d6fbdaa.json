{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\justi\\\\Desktop\\\\THEJOURNEY\\\\WebDevelopment\\\\BruinDiningPlus\\\\screens\\\\DinningHallScreen.js\";\nimport * as React from 'react';\nimport { Menu } from \"../components/Menu\";\nimport { getDatabase } from \"../model/data\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Covel from \"./Covel\";\nimport DeNeve from \"./DeNeve\";\nimport BPlate from \"./BPlate\";\nimport Feast from \"./Feast\";\n\nvar DiningHallScreen = function (_React$Component) {\n  _inherits(DiningHallScreen, _React$Component);\n\n  function DiningHallScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DiningHallScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DiningHallScreen).call(this, props));\n\n    _this.updateData = function (data) {\n      var json = data.toJSON();\n      var a = Object.keys(json).map(function (key) {\n        return json[key];\n      });\n\n      _this.setState({\n        data: a.filter(function (item) {\n          return item.location === _this.props.route.name && item.time === \"dinner\";\n        })\n      });\n\n      _this.forceUpdate();\n    };\n\n    _this.componentDidMount = function () {\n      getDatabase().ref(\"/menus\").on(\"value\", _this.updateData);\n    };\n\n    _this.render = function () {\n      if (_this.props.route.name === \"Covel\") {\n        return React.createElement(Covel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          }\n        }, React.createElement(Menu, {\n          data: _this.state.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          }\n        }));\n      } else if (_this.props.route.name === \"De Neve\") {\n        return React.createElement(DeNeve, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }, React.createElement(Menu, {\n          data: _this.state.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          }\n        }));\n      } else if (_this.props.route.name === \"Feast\") {\n        return React.createElement(Feast, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        }, React.createElement(Menu, {\n          data: _this.state.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          }\n        }));\n      } else {\n        return React.createElement(BPlate, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          }\n        }, React.createElement(Menu, {\n          data: _this.state.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          }\n        }));\n      }\n    };\n\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  return DiningHallScreen;\n}(React.Component);\n\nexport { DiningHallScreen as default };","map":{"version":3,"sources":["C:/Users/justi/Desktop/THEJOURNEY/WebDevelopment/BruinDiningPlus/screens/DinningHallScreen.js"],"names":["React","Menu","getDatabase","Covel","DeNeve","BPlate","Feast","DiningHallScreen","props","updateData","data","json","toJSON","a","Object","keys","map","key","setState","filter","item","location","route","name","time","forceUpdate","componentDidMount","ref","on","render","state","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AACA,SAASC,WAAT;;AAEA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;;IAEqBC,gB;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;;AADe,UAKnBC,UALmB,GAKN,UAACC,IAAD,EAAU;AACnB,UAAMC,IAAI,GAAGD,IAAI,CAACE,MAAL,EAAb;AACA,UAAMC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsB,UAAAC,GAAG;AAAA,eAAIN,IAAI,CAACM,GAAD,CAAR;AAAA,OAAzB,CAAV;;AACA,YAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEG,CAAC,CAACM,MAAF,CAAS,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,QAAL,KAAkB,MAAKb,KAAL,CAAWc,KAAX,CAAiBC,IAAnC,IAA2CH,IAAI,CAACI,IAAL,KAAc,QAA7D;AAAA,SAAb;AAAR,OAAd;;AACA,YAAKC,WAAL;AACH,KAVkB;;AAAA,UAYnBC,iBAZmB,GAYC,YAAM;AACtBxB,MAAAA,WAAW,GAAGyB,GAAd,CAAkB,QAAlB,EAA4BC,EAA5B,CAA+B,OAA/B,EAAwC,MAAKnB,UAA7C;AACH,KAdkB;;AAAA,UAgBnBoB,MAhBmB,GAgBV,YAAM;AACX,UAAI,MAAKrB,KAAL,CAAWc,KAAX,CAAiBC,IAAjB,KAA0B,OAA9B,EAAuC;AACnC,eAAQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,MAAKO,KAAL,CAAWpB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAR;AACH,OAFD,MAEO,IAAI,MAAKF,KAAL,CAAWc,KAAX,CAAiBC,IAAjB,KAA0B,SAA9B,EAAyC;AAC5C,eAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,MAAKO,KAAL,CAAWpB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,CAAR;AACH,OAFM,MAEA,IAAI,MAAKF,KAAL,CAAWc,KAAX,CAAiBC,IAAjB,KAA0B,OAA9B,EAAuC;AAC1C,eAAQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,MAAKO,KAAL,CAAWpB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAR;AACH,OAFM,MAEA;AACH,eAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,MAAKoB,KAAL,CAAWpB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,CAAR;AACH;AACJ,KA1BkB;;AAEf,UAAKoB,KAAL,GAAa;AAAEpB,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFe;AAGlB;;;EAJyCV,KAAK,CAAC+B,S;;SAA/BxB,gB","sourcesContent":["import * as React from 'react';\nimport { Menu } from \"../components/Menu\";\nimport { getDatabase } from \"../model/data\";\nimport { View } from 'react-native';\nimport Covel from './Covel';\nimport DeNeve from './DeNeve';\nimport BPlate from './BPlate';\nimport Feast from './Feast';\n\nexport default class DiningHallScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { data: {} };\n    }\n\n    updateData = (data) => {\n        const json = data.toJSON();\n        const a = Object.keys(json).map(key => json[key]);\n        this.setState({ data: a.filter(item => item.location === this.props.route.name && item.time === \"dinner\") });\n        this.forceUpdate();\n    }\n\n    componentDidMount = () => {\n        getDatabase().ref(\"/menus\").on(\"value\", this.updateData);\n    }\n\n    render = () => {\n        if (this.props.route.name === \"Covel\") {\n            return (<Covel><Menu data={this.state.data} /></Covel>)\n        } else if (this.props.route.name === \"De Neve\") {\n            return (<DeNeve><Menu data={this.state.data} /></DeNeve>)\n        } else if (this.props.route.name === \"Feast\") {\n            return (<Feast><Menu data={this.state.data} /></Feast>)\n        } else {\n            return (<BPlate><Menu data={this.state.data} /></BPlate>)\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}