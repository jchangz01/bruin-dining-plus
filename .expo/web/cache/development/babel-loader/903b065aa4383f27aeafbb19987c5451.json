{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\justi\\\\Desktop\\\\THEJOURNEY\\\\WebDevelopment\\\\BruinDiningPlus\\\\screens\\\\BPlate.js\";\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as Font from 'expo-font';\nimport { Menu } from \"../components/Menu\";\nvar HEADER_MAX_HEIGHT = 150;\nvar HEADER_MIN_HEIGHT = Platform.OS === 'ios' ? 60 : 73;\nvar HEADER_SCROLL_DISTANCE = HEADER_MAX_HEIGHT - HEADER_MIN_HEIGHT;\n\nvar BPlate = function (_Component) {\n  _inherits(BPlate, _Component);\n\n  function BPlate(props) {\n    var _this;\n\n    _classCallCheck(this, BPlate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BPlate).call(this, props));\n\n    _this.componentDidMount = function () {\n      Font.loadAsync({\n        'bebas-neue': require(\"../assets/fonts/BebasNeue.otf\")\n      });\n    };\n\n    _this._renderScrollViewContent = function () {\n      return React.createElement(View, {\n        style: styles.scrollViewContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, \"Dining venue at UCLA emphasizing health-oriented dishes made with local and sustainable ingredients.\"), _this.props.children);\n    };\n\n    _this.render = function () {\n      var scrollY = Animated.add(_this.state.scrollY, Platform.OS === 'ios' ? HEADER_MAX_HEIGHT : 0);\n      var headerTranslate = scrollY.interpolate({\n        inputRange: [0, HEADER_SCROLL_DISTANCE],\n        outputRange: [0, -HEADER_SCROLL_DISTANCE],\n        extrapolate: 'clamp'\n      });\n      var imageOpacity = scrollY.interpolate({\n        inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\n        outputRange: [1, 1, 0],\n        extrapolate: 'clamp'\n      });\n      var imageTranslate = scrollY.interpolate({\n        inputRange: [0, HEADER_SCROLL_DISTANCE],\n        outputRange: [0, 100],\n        extrapolate: 'clamp'\n      });\n      var titleScale = scrollY.interpolate({\n        inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\n        outputRange: [1, 1, 0.8],\n        extrapolate: 'clamp'\n      });\n      var titleTranslate = scrollY.interpolate({\n        inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\n        outputRange: [0, 0, -57],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(View, {\n        style: styles.fill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(StatusBar, {\n        translucent: true,\n        barStyle: \"light-content\",\n        backgroundColor: \"rgba(0, 0, 0, 0.251)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }), React.createElement(Animated.ScrollView, {\n        style: styles.fill,\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: _this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: _this.state.refreshing,\n          onRefresh: function onRefresh() {\n            _this.setState({\n              refreshing: true\n            });\n\n            setTimeout(function () {\n              return _this.setState({\n                refreshing: false\n              });\n            }, 1000);\n          },\n          progressViewOffset: HEADER_MAX_HEIGHT,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }),\n        contentInset: {\n          top: HEADER_MAX_HEIGHT\n        },\n        contentOffset: {\n          y: -HEADER_MAX_HEIGHT\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, _this._renderScrollViewContent()), React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.header, {\n          transform: [{\n            translateY: headerTranslate\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, React.createElement(Animated.Image, {\n        style: [styles.backgroundImage, {\n          opacity: imageOpacity,\n          transform: [{\n            translateY: imageTranslate\n          }]\n        }],\n        source: require(\"../assets/images/bplate.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      })), React.createElement(Animated.View, {\n        style: [styles.bar, {\n          transform: [{\n            scale: titleScale\n          }, {\n            translateY: titleTranslate\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        }\n      }, \"Bruin Plate\")));\n    };\n\n    _this.state = {\n      scrollY: new Animated.Value(Platform.OS === 'ios' ? -HEADER_MAX_HEIGHT : 0),\n      refreshing: false\n    };\n    return _this;\n  }\n\n  return BPlate;\n}(Component);\n\nexport { BPlate as default };\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  content: {\n    flex: 1\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: '#03A9F4',\n    overflow: 'hidden',\n    height: HEADER_MAX_HEIGHT\n  },\n  backgroundImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 150,\n    width: null,\n    height: HEADER_MAX_HEIGHT,\n    resizeMode: 'cover'\n  },\n  bar: {\n    backgroundColor: 'transparent',\n    marginTop: Platform.OS === 'ios' ? 9 : 18,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 40,\n    left: 0,\n    right: 0\n  },\n  title: {\n    color: 'white',\n    fontSize: 50,\n    textAlignVertical: \"top\",\n    fontWeight: \"bold\",\n    fontFamily: 'bebas-neue'\n  },\n  subtitle: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 8,\n    paddingLeft: 8,\n    marginBottom: 30,\n    fontSize: 14,\n    width: 410,\n    textAlign: \"center\",\n    backgroundColor: '#d3d3d3',\n    color: 'gray'\n  },\n  scrollViewContent: {\n    paddingTop: Platform.OS !== 'ios' ? HEADER_MAX_HEIGHT : 0,\n    alignSelf: \"center\"\n  },\n  row: {\n    height: 40,\n    margin: 16,\n    backgroundColor: '#D3D3D3',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/justi/Desktop/THEJOURNEY/WebDevelopment/BruinDiningPlus/screens/BPlate.js"],"names":["React","Component","Font","Menu","HEADER_MAX_HEIGHT","HEADER_MIN_HEIGHT","Platform","OS","HEADER_SCROLL_DISTANCE","BPlate","props","componentDidMount","loadAsync","require","_renderScrollViewContent","styles","scrollViewContent","subtitle","children","render","scrollY","Animated","add","state","headerTranslate","interpolate","inputRange","outputRange","extrapolate","imageOpacity","imageTranslate","titleScale","titleTranslate","fill","event","nativeEvent","contentOffset","y","useNativeDriver","refreshing","setState","setTimeout","top","header","transform","translateY","backgroundImage","opacity","bar","scale","title","Value","StyleSheet","create","flex","content","position","left","right","backgroundColor","overflow","height","width","resizeMode","marginTop","alignItems","justifyContent","color","fontSize","textAlignVertical","fontWeight","fontFamily","paddingTop","paddingBottom","paddingRight","paddingLeft","marginBottom","textAlign","alignSelf","row","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Animated,\r\n  Platform,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport * as Font from 'expo-font';\r\nimport { Menu } from '../components/Menu';\r\n\r\n\r\nconst HEADER_MAX_HEIGHT = 150;\r\nconst HEADER_MIN_HEIGHT = Platform.OS === 'ios' ? 60 : 73;\r\nconst HEADER_SCROLL_DISTANCE = HEADER_MAX_HEIGHT - HEADER_MIN_HEIGHT;\r\n\r\nexport default class BPlate extends Component {\r\n  componentDidMount = () => {\r\n    Font.loadAsync({\r\n      'bebas-neue': require('../assets/fonts/BebasNeue.otf')\r\n    })\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scrollY: new Animated.Value(\r\n        // iOS has negative initial scroll value because content inset...\r\n        Platform.OS === 'ios' ? -HEADER_MAX_HEIGHT : 0,\r\n      ),\r\n      refreshing: false,\r\n    };\r\n  }\r\n\r\n  _renderScrollViewContent = () => {\r\n    return (\r\n      <View style={styles.scrollViewContent}>\r\n        <Text style={styles.subtitle}>Dining venue at UCLA emphasizing health-oriented dishes made with local and sustainable ingredients.</Text>\r\n        {this.props.children}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  render = () => {\r\n    // Because of content inset the scroll value will be negative on iOS so bring\r\n    // it back to 0.\r\n    const scrollY = Animated.add(\r\n      this.state.scrollY,\r\n      Platform.OS === 'ios' ? HEADER_MAX_HEIGHT : 0,\r\n    );\r\n    const headerTranslate = scrollY.interpolate({\r\n      inputRange: [0, HEADER_SCROLL_DISTANCE],\r\n      outputRange: [0, -HEADER_SCROLL_DISTANCE],\r\n      extrapolate: 'clamp',\r\n    });\r\n\r\n    const imageOpacity = scrollY.interpolate({\r\n      inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\r\n      outputRange: [1, 1, 0],\r\n      extrapolate: 'clamp',\r\n    });\r\n    const imageTranslate = scrollY.interpolate({\r\n      inputRange: [0, HEADER_SCROLL_DISTANCE],\r\n      outputRange: [0, 100],\r\n      extrapolate: 'clamp',\r\n    });\r\n\r\n    const titleScale = scrollY.interpolate({\r\n      inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\r\n      outputRange: [1, 1, 0.8],\r\n      extrapolate: 'clamp',\r\n    });\r\n    const titleTranslate = scrollY.interpolate({\r\n      inputRange: [0, HEADER_SCROLL_DISTANCE / 2, HEADER_SCROLL_DISTANCE],\r\n      outputRange: [0, 0, -57],\r\n      extrapolate: 'clamp',\r\n    });\r\n\r\n    return (\r\n      <View style={styles.fill}>\r\n        <StatusBar\r\n          translucent\r\n          barStyle=\"light-content\"\r\n          backgroundColor=\"rgba(0, 0, 0, 0.251)\"\r\n        />\r\n        <Animated.ScrollView\r\n          style={styles.fill}\r\n          scrollEventThrottle={1}\r\n          onScroll={Animated.event(\r\n            [{ nativeEvent: { contentOffset: { y: this.state.scrollY } } }],\r\n            { useNativeDriver: true },\r\n          )}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={this.state.refreshing}\r\n              onRefresh={() => {\r\n                this.setState({ refreshing: true });\r\n                setTimeout(() => this.setState({ refreshing: false }), 1000);\r\n              }}\r\n              // Android offset for RefreshControl\r\n              progressViewOffset={HEADER_MAX_HEIGHT}\r\n            />\r\n          }\r\n          // iOS offset for RefreshControl\r\n          contentInset={{\r\n            top: HEADER_MAX_HEIGHT,\r\n          }}\r\n          contentOffset={{\r\n            y: -HEADER_MAX_HEIGHT,\r\n          }}\r\n        >\r\n          {this._renderScrollViewContent()}\r\n        </Animated.ScrollView>\r\n        <Animated.View\r\n          pointerEvents=\"none\"\r\n          style={[\r\n            styles.header,\r\n            { transform: [{ translateY: headerTranslate }] },\r\n          ]}\r\n        >\r\n          <Animated.Image\r\n            style={[\r\n              styles.backgroundImage,\r\n              {\r\n                opacity: imageOpacity,\r\n                transform: [{ translateY: imageTranslate }],\r\n              },\r\n            ]}\r\n            source={require('../assets/images/bplate.jpg')}\r\n          />\r\n        </Animated.View>\r\n        <Animated.View\r\n          style={[\r\n            styles.bar,\r\n            {\r\n              transform: [\r\n                { scale: titleScale },\r\n                { translateY: titleTranslate },\r\n              ],\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={styles.title}>Bruin Plate</Text>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  fill: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: '#03A9F4',\r\n    overflow: 'hidden',\r\n    height: HEADER_MAX_HEIGHT,\r\n  },\r\n  backgroundImage: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 150,\r\n    width: null,\r\n    height: HEADER_MAX_HEIGHT,\r\n    resizeMode: 'cover',\r\n  },\r\n  bar: {\r\n    backgroundColor: 'transparent',\r\n    marginTop: Platform.OS === 'ios' ? 9 : 18,\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    top: 40,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    fontSize: 50,\r\n    textAlignVertical: \"top\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: 'bebas-neue'\r\n  },\r\n  subtitle: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n    marginBottom: 30,\r\n    fontSize: 14,\r\n    width: 410,\r\n    textAlign: \"center\",\r\n    backgroundColor: '#d3d3d3',\r\n    color: 'gray',\r\n  },\r\n  scrollViewContent: {\r\n    // iOS uses content inset, which acts like padding.\r\n    paddingTop: Platform.OS !== 'ios' ? HEADER_MAX_HEIGHT : 0,\r\n    alignSelf: \"center\"\r\n  },\r\n  row: {\r\n    height: 40,\r\n    margin: 16,\r\n    backgroundColor: '#D3D3D3',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}